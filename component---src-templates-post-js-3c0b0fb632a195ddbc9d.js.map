{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["moment","locale","query","Post","render","this","props","className","_","get","src","withPrefix","alt","htmlToReact","strftime","href","class","encodeURI","React","Component"],"mappings":"yRASAA,IAAOC,OAAO,MAIP,IAAMC,EAAK,aAQGC,E,gLACjBC,OAAA,WACI,OACI,kBAAC,IAAWC,KAAKC,MACjB,6BAASC,UAAU,QACdC,IAAEC,IAAIJ,KAAKC,MAAO,2CAA4C,OAC/D,yBAAKC,UAAU,eAAeG,IAAKC,YAAWH,IAAEC,IAAIJ,KAAKC,MAAO,2CAA4C,OAAQM,IAAKJ,IAAEC,IAAIJ,KAAKC,MAAO,0CAA2C,QAEtL,4BAAQC,UAAU,QACd,yBAAKA,UAAU,QACX,4BAAKC,IAAEC,IAAIJ,KAAKC,MAAO,gCAAiC,OACvDE,IAAEC,IAAIJ,KAAKC,MAAO,mCAAoC,OACvD,4BAAKO,YAAYL,IAAEC,IAAIJ,KAAKC,MAAO,mCAAoC,QAEvE,wBAAIC,UAAU,gBAAgBP,IAAOQ,IAAEC,IAAIJ,KAAKC,MAAO,+BAAgC,OAAOQ,SAAS,mBAG/G,yBAAKP,UAAU,WACX,2BAAIC,IAAEC,IAAIJ,KAAKC,MAAO,kCAAmC,OACzD,yBAAKC,UAAU,kBACnC,uBAAGQ,KAAMP,IAAEC,IAAIJ,KAAKC,MAAO,yCAA0C,MAAOC,UAAU,kBAAiB,yBAAKS,MAAM,YAAYN,IAAKF,IAAEC,IAAIJ,KAAKC,MAAO,yCAA0C,MAAOM,IAAKJ,IAAEC,IAAIJ,KAAKC,MAAO,wCAAyC,SACtQ,6BACA,2BAAG,uBAAGS,KAAMP,IAAEC,IAAIJ,KAAKC,MAAO,2CAA4C,OAAvE,qBAAgG,uCACnG,2BAAG,uBAAGS,KAAMP,IAAEC,IAAIJ,KAAKC,MAAO,2CAA4C,OAAvE,qBAAgG,yCAG3E,8CAAmB,uBAAGS,KAAM,UAAYP,IAAEC,IAAIJ,KAAKC,MAAO,iDAAkD,MAAQ,YAAcW,UAAUT,IAAEC,IAAIJ,KAAKC,MAAO,gCAAiC,QAA5K,WAAnB,OAAsN,uBAAGS,KAAMP,IAAEC,IAAIJ,KAAKC,MAAO,yDAA0D,MAAQW,UAAUT,IAAEC,IAAIJ,KAAKC,MAAO,gDAAiD,QAA1K,cAAtN,cAAia,uBAAGS,KAAMP,IAAEC,IAAIJ,KAAKC,MAAO,kDAAmD,MAAQ,8BAAgCW,UAAUT,IAAEC,IAAIJ,KAAKC,MAAO,gCAAiC,QAAnL,kBAAja,KAEHO,YAAYL,IAAEC,IAAIJ,KAAKC,MAAO,mBAAoB,W,GA5BrCY,IAAMC","file":"component---src-templates-post-js-3c0b0fb632a195ddbc9d.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport 'moment/locale/ru';\nimport {graphql} from 'gatsby';\n\nimport {Layout} from '../components/index';\nimport {withPrefix, htmlToReact} from '../utils';\n\nmoment.locale('ru');\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Post extends React.Component {\n    render() {\n        return (\n            <Layout {...this.props}>\n            <section className=\"post\">\n                {_.get(this.props, 'pageContext.frontmatter.content_img_path', null) && (\n                <img className=\"header-image\" src={withPrefix(_.get(this.props, 'pageContext.frontmatter.content_img_path', null))} alt={_.get(this.props, 'pageContext.frontmatter.content_img_alt', null)}/>\n                )}\n                <header className=\"hero\">\n                    <div className=\"copy\">\n                        <h1>{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\n                        {_.get(this.props, 'pageContext.frontmatter.subtitle', null) && (\n                        <h3>{htmlToReact(_.get(this.props, 'pageContext.frontmatter.subtitle', null))}</h3>\n                        )}\n                        <h3 className=\"publish-date\">{moment(_.get(this.props, 'pageContext.frontmatter.date', null)).strftime('%A, %e %B %Y')}</h3>\n                    </div>\n                </header>\n                <div className=\"content\">\n                    <p>{_.get(this.props, 'pageContext.frontmatter.excerpt', null)}</p>\n                    <div className=\"article-teaser\">\n<a href={_.get(this.props, 'pageContext.frontmatter.thumb_img_path', null)} className=\"thumbnail logo\"><img class=\"thumbnail\" src={_.get(this.props, 'pageContext.frontmatter.thumb_img_path', null)} alt={_.get(this.props, 'pageContext.frontmatter.thumb_img_alt', null)}/></a>\n<div>\n<p><a href={_.get(this.props, 'pageContext.frontmatter.article_pdf_path', null)}>Скачать в формате <code>pdf</code></a></p>\n<p><a href={_.get(this.props, 'pageContext.frontmatter.article_txt_path', null)}>Скачать в формате <code>txt</code></a></p>\n</div>\n</div>\n                        <p>Оставьте отзыв: <a href={'mailto:' + _.get(this.props, 'pageContext.site.siteMetadata.feedback_mail_to', null) + '?subject=' + encodeURI(_.get(this.props, 'pageContext.frontmatter.title', null))}>письмом</a>, в <a href={_.get(this.props, 'pageContext.site.siteMetadata.feedback_discussions_url', null) + encodeURI(_.get(this.props, 'pageContext.frontmatter.github_discussions_id', null))}>обсуждении</a> или через <a href={_.get(this.props, 'pageContext.site.siteMetadata.feedback_form_url', null) + '?answer_short_text_6744842=' + encodeURI(_.get(this.props, 'pageContext.frontmatter.title', null))}>обратную связь</a>.\n                        </p>\n                    {htmlToReact(_.get(this.props, 'pageContext.html', null))}\n                </div>\n            </section>\n            </Layout>\n        );\n    }\n}\n"],"sourceRoot":""}